---
const sitekey = "50b2fe65-b00b-4b9e-ad62-3ba471098be2";
const lang = Astro.url.pathname.startsWith("/cy") ? "cy" : "en";
const theme = "dark";
---

<div id="captcha-container">
  <div id="hcaptcha"></div>
</div>
<p id="captcha-error" class="text-red-600 text-sm hidden pt-2" role="alert">Please complete the captcha before submitting.</p>

<script type="module">
    const sitekey = "50b2fe65-b00b-4b9e-ad62-3ba471098be2";
    const theme = getCurrentTheme();
    const themeToggle = document.querySelector('[data-theme-switcher]');
    let currentCaptchaId = null;

    function getCurrentTheme() {
        return localStorage.getItem("theme") === "light" ? "light" : "dark";
    }

    function loadScriptForLangAndTheme(lang, theme) {
        console.log("üåç loadScriptForLangAndTheme with lang:", lang, "and theme:", theme);

        // Remove old script
        const oldScript = document.querySelector('script[src^="https://js.hcaptcha.com/1/api.js"]');
        if (oldScript) {
            oldScript.remove();
            console.log("üßπ Removed old hCaptcha script.");
        }

        // Remove old hCaptcha from memory
        if (window.hcaptcha) {
            delete window.hcaptcha;
            currentCaptchaId = null
            console.log("üßº Removed cached hCaptcha object.");
        }

        // Replace hCaptcha div
        const container = document.getElementById("captcha-container");
        const oldCaptcha = document.getElementById("hcaptcha");
        if (oldCaptcha) oldCaptcha.remove();
        console.log("üßπ Removed old hCaptcha div.");

        const newCaptcha = document.createElement("div");
        newCaptcha.id = "hcaptcha";
        container.appendChild(newCaptcha);
        console.log("üì¶ Appended new hCaptcha div:", newCaptcha);

        // Define global onload callback
        window.hcaptchaOnLoad = () => {

            const captchaDiv = document.getElementById("hcaptcha");
            if (!captchaDiv) {
                console.warn("üö´ hcaptcha div not found on load.");
                return;
            }
            if (currentCaptchaId !== null) {
                console.log("üîÅ hCaptcha already rendered, skipping.");
                return;
            }
            if (window.hcaptcha) {
            console.log("‚úÖ hCaptcha loaded, now rendering.");
            currentCaptchaId = window.hcaptcha.render(newCaptcha, {
                sitekey,
                theme: theme,
                language: lang, // you can also use `hl`, but this is more explicit
            });
            } else {
                console.log("‚ùå hCaptcha not ready during hcaptchaOnLoad.");
            }
        };

        // Add the new script with explicit render and onload callback
        const script = document.createElement("script");
        script.src = `https://js.hcaptcha.com/1/api.js?render=explicit&recaptchacompat=off&onload=hcaptchaOnLoad&hl=${lang}`;
        script.async = true;
        script.defer = true;
        document.body.appendChild(script);
        console.log("üì¶ Appended hCaptcha script for lang:", lang);
    }

    // Initial render
    const container = document.getElementById("hcaptcha");
    if (container) {
        const lang = location.pathname.startsWith("/cy") ? "cy" : "en";
        loadScriptForLangAndTheme(lang, theme);
    }

    bindThemeToggleListener();

    document.addEventListener("astro:after-swap", () => {
        const container = document.getElementById("hcaptcha");
        if (!container) {
            console.log("üö´ Not on contact page. Skipping hCaptcha.");
            return;
        }
        const lang = location.pathname.startsWith("/cy") ? "cy" : "en";
        const theme = getCurrentTheme();
        loadScriptForLangAndTheme(lang, theme);
        bindThemeToggleListener();
        addValidationListener();
    });

    function bindThemeToggleListener() {
        const themeToggle = document.querySelector('[data-theme-switcher]');
        if (themeToggle) {
            console.log("üîó Binding theme toggle listener.");
            themeToggle.addEventListener("change", () => {
                const container = document.getElementById("hcaptcha");
                if (!container) {
                    console.log("üö´ theme-change received, but hcaptcha not found.");
                    return;
                }

                const lang = location.pathname.startsWith("/cy") ? "cy" : "en";
                const theme = document.documentElement.classList.contains("dark") ? "dark" : "light";

                console.log("üé® Theme changed ‚Äì reloading HCaptcha", theme);
                loadScriptForLangAndTheme(lang, theme);
            });
        } else {
            console.log("‚ùå Theme toggle not found.");
        }
    }

    const form = document.getElementById("site-contact-form");

    function addValidationListener(){
        form?.addEventListener("submit", function (e) {
            let isValid = true;

            // Validate hCaptcha
            const captchaResponse = form.querySelector('textarea[name="h-captcha-response"]').value;
            const captchaError = document.getElementById("captcha-error");

            if (!captchaResponse) {
                e.preventDefault();
                captchaError?.classList.remove("hidden");
                document.getElementById("hcaptcha")?.scrollIntoView({ behavior: "smooth", block: "center" });
                isValid = false;
            } else {
                captchaError?.classList.add("hidden");
            }

        });
    }

    addValidationListener();
        
</script>